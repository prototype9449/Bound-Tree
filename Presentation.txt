В этом алгоритме мы имеем древовидную структуру опроса.
Каждый опрос имеет корень - Root. Каждый узел имеет предка(кроме корня) и потомков(если есть). 
Узлы строго типизированы. То есть мы имеем 3DGrid, Grid, Single, OpenText, Answer, PredefinedList ... 
Для каждого узла устанавливается логический урвень. Например у корня - 0. Длаее Grid3D - 2 и т.д. Основываясь на значении лог уровня можно определить - может ли один узел содержать другой. 
Пример мы имеем два узла A и B. Если A.logLevel < B.logLevel то A может содержать в себе B. 
Если A.logLevel = B.logLevel то никто из них не может содержать дург друга. 

Например:
1) 3DGrid может содержать Grid, Single, OpenText. 
2) Grid может содержать Single, OpenText. 
3) Single может содержать PredefinedList, Answer. 
4) PredefinedList может содержать Answer. 
5) Но Answer уже ничего может в себе содержать.

При добавлении связи происходит проверка : если связанны родители, то связи потомков внутри могут быть только между потомками этих родителей. Связать два узла из разных опросов возможно только если их логические уровни совпадают.

Есть 3 вида связи в каждом соединении между двумя узлами
  а) Строгая - когда два узла связаны
  б) Относительная - когда связан хотя бы один из детей этих узлов
  в) Отсутствие, в этом случае узел заменяется на пустой

Работа алгоритма :
1) Копирование структуры левого дерева, тем самым на выходе будет два дерева с одинаковой структурой - но правое дерево будет состоять из пустых узлов.
2) Для каждого узла из левого дерева, с которым имеется связь в правом(пустом) дереве вместо пустого вставляем узел из первоначального правого дерева, с которым связан узел из левого дерева
3) В правом полупустом дереве пытаемся для каждого пустого узла восстановить его, основываясь на первоначальном правом дереве
4) Для каждого узла пытаемся вставить ребёнка между его детьми и им, если в правом дереве имеется промежуточный узел

При соединении окончательня структура дерева формируется из главного опроса. Соединение не симетрично, то есть 
A + B = C. B + A != C. 

При соединении 2 и более деревьев получается один и тот же тип. При соединении получается также древовидная структура. То есть каждый узел также имеет свой тип. Но в каждом узле лежит структура из узлов разных опросов с соответсвующим типом связи. 